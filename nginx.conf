worker_processes 1;

events { worker_connections 1024; }

http {

  log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name  to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';

  upstream web {
    server docker.for.mac.host.internal:3000;
    server frontend:3000 backup;
  }

  upstream api {
    server docker.for.mac.host.internal:4000 backup;
    server backend:4000 backup;
  }

  #upstream socket {
  #  server socket:9008;
  #}

  server {
    listen 80;
    #listen 443 ssl;

    #root /usr/share/nginx/html;
    root /myapp/public;
    try_files $uri/index.html $uri @web;

    location @web {
      proxy_next_upstream error timeout http_502 http_503;
      proxy_read_timeout 60s;

      proxy_pass http://web;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-FORWARDED-PROTO $scheme;
      proxy_redirect off;

      access_log /var/log/nginx/access.log upstreamlog;
    }

    location /sockjs-node {
      proxy_pass http://web;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto https;
      proxy_redirect off;

      access_log /var/log/nginx/access.log upstreamlog;
    }

    location ~ ^/(api|stripe|oauth) {
      proxy_next_upstream error timeout http_502 http_503;
      proxy_read_timeout 60s;

      proxy_pass http://api;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-FORWARDED-PROTO $scheme;
      proxy_redirect off;

      access_log /var/log/nginx/access.log upstreamlog;
    }

    location /graphql {
      proxy_pass http://api; # Change to socket if we have a separate server
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto https;
      proxy_redirect off;

      access_log /var/log/nginx/access.log upstreamlog;
    }

    location /socket.io {
      proxy_pass http://api; # Change to socket if we have a separate server
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto https;
      proxy_redirect off;

      access_log /var/log/nginx/access.log upstreamlog;
    }

    location /nginx_status {
      stub_status on;
      access_log  off;
      # allow 1.1.1.1;
      # deny all;
    }

    error_page 500 502 503 504 /500.html;
    client_max_body_size 4G;
    keepalive_timeout 10;

    #ssl on;
    #ssl_certificate /ssl/www.my_app.co.crt;
    #ssl_certificate_key /ssl/www.my_app.co.key;

    #ssl_session_timeout 5m;

    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    #ssl_prefer_server_ciphers on;
  }

}
